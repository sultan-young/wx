{"version":3,"sources":["views/home/Home.js","components/Cancel.js","views/login/Login.js","views/register/Register.js","model/chat.js","views/content/message/Message.js","store/reducers/headerisShow.js","store/reducers/headerTitle.js","store/reducers/userinfo.js","store/reducers/footerisshow.js","store/reducers/chatinfo.js","store/reducers/messageList.js","store/reducers/emjlist.js","store/reducers/addressdata.js","store/reducers/validation.js","store/store.js","views/content/template/Template.js","views/content/addresslist/Addresslist.js","views/content/found/Found.js","views/content/my/My.js","components/emoji/Emoji.js","lib/filterEmj.js","components/Chat.js","components/scan/Scan.js","views/content/Content.js","views/error/Notfound.js","components/adduser/AddUser.js","components/circle/Circle.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","id","className","onClick","props","history","push","style","background","color","width","height","Component","withRouter","Cancel","Login","handleClick","inputRef","focus","axios","post","username","autoFocusInst","value","password","then","res","data","err","Toast","fail","localStorage","setItem","get","setuserinfo","netname","success","getFieldProps","this","form","renderHeader","clear","placeholder","ref","el","type","Item","textAlign","to","connect","photopath","dispatch","payload","createForm","Register","console","log","email","portrait","files","file","url","alert","msg","state","multiple","onChange","index","setState","onSegChange","e","nativeEvent","selectedSegmentIndex","onImageClick","fs","selectable","length","disableDelete","ws","WebSocket","Message","setTitle","item","setchatuserinfo","maxLength","messageList","map","key","_","ClickFun","src","alt","unread","userinfo","title","from","toNetName","headerisShow","prestate","action","headerTitle","photoPath","footerisshow","chatinfo","newstate","time","emglist","img","text","addressdata","validation","reducer","combineReducers","emjlist","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","reduxPromise","reduxThunk","persistor","persistStore","Template","myboxbgcolor","useRef","useEffect","current","iconfont","getState","fontSize","Addresslist","dom","refs","footerDom","document","getElementById","clientHeight","padding","i-bgcolor","Found","My","setHeaderHidden","setHeaderShow","logout","Emoji","emj","getElementsByClassName","bottom","callback","filterEmj","list","forEach","str","slice","reg","RegExp","replace","Chat","emjisshow","updataUnreadmsg","imblist","List","chatuserinfo","update","updatamessage","toJS","ChatHandler","obj","Date","getTime","listData","send","JSON","stringify","setfootnavhidden","setheaderhidden","setfootnavshow","setheadershow","goBack","ev","target","Popover","Scan","visible","onSelect","opt","addUserHandler","scanHandler","handleVisibleChange","mode","rightContent","mask","overlayClassName","overlayStyle","overlay","icon","data-seed","whiteSpace","align","overflow","adjustY","adjustX","offset","marginRight","display","alignItems","Content","connectionChat","onopen","onerror","onmessage","message","parse","switchMessage","timeStamp","countUnreadCount","count","MessageList","componentDidMount","initData","setInterval","setMessageList","arr","NetName","setvalidation","updateaddressdata","friends","updatevalidationdata","position","transform","path","component","activeClassName","mapDispatchToProps","Notfound","setaddressdata","useState","setvalue","datalist","setDataList","isshow","setIsshow","submitFun","Axios","newDataList","updatavalidation","splice","cancelText","onCancel","onSubmit","onClear","showCancelButton","signature","friendname","info","inline","size","disabled","Circle","wxRouter","AddUser","render","getItem","App","loading","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a3008d2e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button } from 'antd-mobile';\r\nimport { withRouter} from 'react-router-dom'\r\nimport './home.css'\r\n\r\n class Home extends Component {\r\n   \r\n    render() {\r\n        return (\r\n            <div id=\"home\">\r\n               <div className=\"btn-box\">\r\n                <Button  onClick={()=>{this.props.history.push(\"/login\")}} style={{background:\"#fff\",color:\"#000\",width:\"35%\",height:\"auto\"}}>登录</Button>\r\n                <Button  onClick={()=>{this.props.history.push(\"/register\")}} style={{background:\"green\",color:\"#fff\",width:\"35%\"}}>注册</Button>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Home)","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router'\r\n\r\nclass Cancel extends Component {\r\n    render() {      \r\n        return (\r\n            <div style={{color:\"green\"}} onClick={()=>{this.props.history.push(\"/home\")}}>取消\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Cancel)","import React, { Component } from 'react'\r\nimport Cancel from '../../components/Cancel'\r\nimport { List, InputItem ,Toast} from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport axios from 'axios'\r\nimport './login.css'\r\nimport {connect} from 'react-redux'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  handleClick = () => {\r\n    this.inputRef.focus();\r\n    // console.log(this.autoFocusInst.props.value,this.inputRef.props.value)\r\n    axios.post(\"/users/login\",{\r\n      username : this.autoFocusInst.props.value,\r\n      password : this.inputRef.props.value\r\n    }).then(res => {\r\n      if(!res.data.err){\r\n        localStorage.setItem(\"login\",true)\r\n        axios.get(`/users/getuserinfo?username=${this.autoFocusInst.props.value}`)\r\n        .then(res=>{\r\n          this.props.setuserinfo(this.autoFocusInst.props.value,res.data.netname,`http://127.0.0.1:5001/uploads/header/${this.autoFocusInst.props.value}.jpg`)\r\n          Toast.success('登录成功', 1,()=>{\r\n            this.props.history.push(\"/index\")\r\n          })\r\n        })\r\n        \r\n      }else if(res.data.err === 1){\r\n        Toast.fail('没有该账号',2)\r\n      }else if(res.data.err === 2){\r\n        Toast.fail('账号密码不匹配',2)\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const { getFieldProps } = this.props.form;\r\n    return (\r\n      <div id=\"login\">\r\n        <Cancel></Cancel>\r\n        <List className=\"loginform\" renderHeader={() => '使用已有账号登录'}>\r\n          <InputItem\r\n            {...getFieldProps('autofocus')}\r\n            clear\r\n            placeholder=\"请输入账号\"\r\n            ref={el => this.autoFocusInst = el}\r\n          >账号</InputItem>\r\n          <InputItem\r\n            {...getFieldProps('focus')}\r\n            clear\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            ref={el => this.inputRef = el}\r\n          >密码</InputItem>\r\n          <List.Item>\r\n            <div\r\n              style={{ width: '100%', color: 'green', textAlign: 'center' }}\r\n              onClick={this.handleClick}\r\n            >\r\n             登录\r\n            </div>\r\n          </List.Item>\r\n        </List>\r\n        <NavLink className=\"login-link\" to=\"/register\">还没有账号，点击注册</NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ()=>{\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setuserinfo : (username,netname,photopath)=>{\r\n    return (dispatch)=>{\r\n      dispatch({\r\n        type : \"userinfo\",\r\n        payload : {\r\n          username,\r\n          netname,\r\n          photopath\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(createForm()(Login))","import React, { Component } from 'react'\r\nimport Cancel from '../../components/Cancel'\r\nimport { List, InputItem, ImagePicker} from 'antd-mobile';\r\nimport { createForm } from 'rc-form';\r\nimport axios from 'axios'\r\nimport './register.css'\r\nimport { NavLink } from 'react-router-dom';\r\nconst data = [\r\n   \r\n];\r\nclass Register extends Component {\r\n    handleClick = () => {\r\n        console.log(this.netname.props.value)\r\n        if (!this.username.props.value || !this.password.props.value || !this.email.props.value || !this.portrait.props.files[0]) {\r\n            alert(\"您有内容还未填写\")\r\n            return\r\n        }\r\n        axios.post(\"/users/register\", {\r\n            username: this.username.props.value,\r\n            password: this.password.props.value,\r\n            email: this.email.props.value,\r\n            file : this.portrait.props.files[0].url,\r\n            netname : this.netname.props.value\r\n        }).then(res => {\r\n            if(res.data.err === 1){\r\n                alert(res.data.msg)\r\n            }else{\r\n                alert(res.data.msg)\r\n            }\r\n        })\r\n    }\r\n    state = {\r\n        files: data,\r\n        multiple: false,\r\n    }\r\n    onChange = (files, type, index) => {\r\n        console.log(files, type, index);\r\n        this.setState({\r\n            files,\r\n        });\r\n    }\r\n    onSegChange = (e) => {\r\n        const index = e.nativeEvent.selectedSegmentIndex;\r\n        this.setState({\r\n            multiple: index === 1,\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldProps } = this.props.form;\r\n\r\n        return (\r\n            <div id=\"register\">\r\n                <Cancel></Cancel>\r\n                <List className=\"registerform\" renderHeader={() => '填写信息进行注册'}>\r\n                    <InputItem\r\n                        {...getFieldProps('autofocus')}\r\n                        clear\r\n                        placeholder=\"请输入账号\"\r\n                        ref={el => this.username = el}\r\n                    >账号</InputItem>\r\n                    <InputItem\r\n                        {...getFieldProps('focus')}\r\n                        clear\r\n                        type=\"password\"\r\n                        placeholder=\"请输入密码\"\r\n                        ref={el => this.password = el}\r\n                    >密码</InputItem>\r\n                    <InputItem\r\n                        {...getFieldProps('netname')}\r\n                        clear\r\n                        placeholder=\"请输入呢名，用于对外展示的名称\"\r\n                        ref={el => this.netname = el}\r\n                    >呢名</InputItem>\r\n                    <InputItem\r\n                        {...getFieldProps('email')}\r\n                        clear\r\n                        type=\"email\"\r\n                        placeholder=\"请输入邮箱，用于找回密码\"\r\n                        ref={el => this.email = el}\r\n                    >邮箱</InputItem>\r\n                    <div className=\"register-header\">\r\n                        <span>头像</span>\r\n                        <ImagePicker\r\n                            files={this.state.files}\r\n                            onChange={this.onChange}\r\n                            onImageClick={(index, fs) => console.log(index, fs)}\r\n                            selectable={this.state.files.length === 0}\r\n                            disableDelete={this.state.files.length === 0}\r\n                            multiple={false}\r\n                            length = {1}\r\n                            ref = {el => this.portrait = el}\r\n                        />\r\n                    </div>\r\n                    <List.Item>\r\n                        <div\r\n                            style={{ width: '100%', color: 'green', textAlign: 'center' }}\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            注册\r\n                </div>\r\n                    </List.Item>\r\n                </List>\r\n                <NavLink className=\"login-link\" to=\"/login\">已有账号，直接登录</NavLink>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default createForm()(Register)","var ws = new WebSocket('ws://127.0.0.1:8080');\r\n\r\nexport default ws","import React, { Component } from 'react'\r\nimport { SearchBar } from 'antd-mobile';\r\nimport {connect} from 'react-redux'\r\n\r\nimport './message.css'\r\n\r\n class Message extends Component {\r\n    \r\n     componentDidMount() {\r\n         this.props.setTitle(\"微信\");\r\n     }\r\n     \r\n    \r\n    ClickFun(item){\r\n        this.props.setchatuserinfo(this.props.username.username,item.username,item.netname)\r\n        this.props.history.push(`/index/chat/${item.username}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <SearchBar placeholder=\"搜索\" maxLength={8} />  \r\n                <ul className=\"message-box\">\r\n                    {\r\n                        this.props.messageList.map(item=><li className=\"message-item\" key={item.username}\r\n                        onClick={_=>{this.ClickFun(item)}}\r\n                        >\r\n                            <div className=\"photo-box-wrap\">\r\n                                <div className=\"photo-box\" >\r\n                                    <img src={\"http://127.0.0.1:5001/uploads/header/\"+item.username+\".jpg\"} alt=\"图片\"/>\r\n                                    {\r\n                                        item.unread !== 0 ? \r\n                                        <div className=\"dot\"></div> \r\n                                        : \r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"msg-box\">\r\n                                <div className=\"chatname\">{item.netname}</div>\r\n                                  <div className=\"lastmsg\">{item.msg[item.msg.length-1].msg}</div>\r\n                            </div>\r\n                        </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        username : state.userinfo,\r\n        messageList : state.messageList\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setTitle : (title)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerTitle\",\r\n                payload : title\r\n            })\r\n        }\r\n    },\r\n    setchatuserinfo : (from,to,toNetName)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type: \"chat\",\r\n                payload : {\r\n                    from,\r\n                    to,\r\n                    toNetName\r\n                }\r\n            })\r\n        }\r\n    },\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Message)","const headerisShow = (prestate=true,action)=>{\r\n    \r\n    var {type,payload} = action\r\n    switch (type) {\r\n        case \"headerisShow\":\r\n            return payload;\r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default headerisShow","const headerTitle = (prestate=\"\",action)=>{\r\n    var {type,payload} = action\r\n    switch (type) {\r\n        case \"headerTitle\":\r\n            return payload;\r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default headerTitle","const userinfo = (prestate={\r\n    username : \"\",\r\n    photoPath : \"\",\r\n    netname : \"\"\r\n},action)=>{\r\n    var {type,payload} = action;\r\n    switch (type) {\r\n        case \"userinfo\":\r\n            let newstate = {...prestate}\r\n            newstate = payload;\r\n            return newstate        \r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default userinfo","const footerisshow = (prestate=true,action)=>{\r\n    \r\n    var {type,payload} = action\r\n    switch (type) {\r\n        case \"footerisshow\":\r\n            return payload;\r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default footerisshow","const chatinfo = (prestate={\r\n    from : \"\",\r\n    to : \"\",\r\n    toNetName : \"\"\r\n},action)=>{\r\n    var {type,payload} = action\r\n    switch (type) {\r\n        case \"chat\":\r\n            var newstate = {...prestate,...payload}\r\n            return newstate;\r\n    \r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default chatinfo","const messageList = (prestate = [{\r\n        username: \"111\",\r\n        msg: [{\r\n            msg: \"你在干啥呢[微笑][男孩]\",\r\n            type: \"get\",\r\n            time : 1\r\n        }, {\r\n            msg: \"你好啊\",\r\n            type: \"send\",\r\n            time : 2\r\n        }, {\r\n            msg: \"快点回话\",\r\n            type: \"get\",\r\n            time : 3\r\n        }],\r\n        netname: \"测试机器人一\",\r\n        unread: 1,\r\n    },\r\n    {\r\n        username: \"222\",\r\n        msg: [{\r\n            msg: \"老公你干啥呢\",\r\n            type: \"get\",\r\n            time : 1\r\n        },{\r\n            msg: \"喂喂喂\",\r\n            type: \"get\",\r\n            time : 2\r\n        },{\r\n            msg: \"你在干嘛呀\",\r\n            type: \"get\",\r\n            time : 3\r\n        }],\r\n        netname: \"测试机器人二\",\r\n        unread: 0,\r\n    },\r\n    {\r\n        username: \"333\",\r\n        msg: [{\r\n            msg: \"我是马总\",\r\n            type: \"get\",\r\n            time : 1\r\n        },{\r\n            msg: \"给你1000万\",\r\n            type: \"get\",\r\n            time : 2\r\n        },{\r\n            msg: \"来这里上班吧\",\r\n            type: \"get\",\r\n            time : 3\r\n        }],\r\n        netname: \"测试机器人三\",\r\n        unread: 0,\r\n    }\r\n], action) => {\r\n    var {\r\n        type,\r\n        payload\r\n    } = action;\r\n    switch (type) {\r\n        case \"message\":\r\n            var newstate = [...payload]\r\n            return newstate;\r\n\r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default messageList","const emglist = (prestate=[{\r\n    img : \"😀\",\r\n    text : \"[微笑]\"\r\n  },{\r\n      img : \"😁\",\r\n      text : \"[呲牙]\"\r\n    },\r\n    {\r\n      img : \"😂\",\r\n      text : \"[苦笑]\"\r\n    },\r\n    {\r\n      img : \"😑\",\r\n      text : \"[无语]\"\r\n    },{\r\n      img : \"😓\",\r\n      text : \"[冷汗]\"\r\n    },{\r\n      img : \"😇\",\r\n      text : \"[天使]\"\r\n    },{\r\n      img : \"😪\",\r\n      text : \"[叹气]\"\r\n    },{\r\n      img : \"😭\",\r\n      text : \"[大哭]\"\r\n    },{\r\n      img : \"😡\",\r\n      text : \"[生气]\"\r\n    },{\r\n      img : \"👦\",\r\n      text : \"[男孩]\"\r\n    },{\r\n      img : \"👧\",\r\n      text : \"[女孩]\"\r\n    },{\r\n      img : \"👨\",\r\n      text : \"[男人]\"\r\n    },{\r\n      img : \"👩\",\r\n      text : \"[女人]\"\r\n    },{\r\n      img : \"👴\",\r\n      text : \"[爷爷]\"\r\n    },{\r\n      img : \"👵\",\r\n      text : \"[奶奶]\"\r\n    },{\r\n      img : \"👶\",\r\n      text : \"[宝宝]\"\r\n    },{\r\n      img : \"👪\",\r\n      text : \"[家庭]\"\r\n    },{\r\n      img : \"💪\",\r\n      text : \"[力量]\"\r\n    },{\r\n      img : \"👈\",\r\n      text : \"[想左]\"\r\n    },{\r\n      img : \"👉\",\r\n      text : \"[向右]\"\r\n    },{\r\n      img : \"☝\",\r\n      text : \"[向上]\"\r\n    },{\r\n      img : \"👇\",\r\n      text : \"[向下]\"\r\n    },{\r\n      img : \"✌\",\r\n      text : \"[胜利]\"\r\n    },{\r\n      img : \"✋\",\r\n      text : \"[手掌]\"\r\n    },{\r\n      img : \"👌\",\r\n      text : \"[ok]\"\r\n    },{\r\n      img : \"👍\",\r\n      text : \"[拇指]\"\r\n    },{\r\n      img : \"👀\",\r\n      text : \"[眼睛]\"\r\n    },{\r\n      img : \"👂\",\r\n      text : \"[耳朵]\"\r\n    },{\r\n      img : \"👃\",\r\n      text : \"[鼻子]\"\r\n    },{\r\n      img : \"👅\",\r\n      text : \"[舌头]\"\r\n    },{\r\n      img : \"👄\",\r\n      text : \"[嘴唇]\"\r\n    },{\r\n      img : \"🔞\",\r\n      text : \"[18禁]\"\r\n    },\r\n],action)=>{\r\n    var {type,payload} = action\r\n    switch (type) {\r\n        case \"emj\":\r\n            var newstate = [...prestate,...payload]\r\n            return newstate;\r\n        default:\r\n            return prestate;\r\n    }\r\n}\r\n\r\nexport default emglist","const addressdata = (prestate = [], action) => {\r\nvar {type,payload} = action;\r\nswitch (type) {\r\n    case \"friendlist\":\r\n        var newstate = [...payload]\r\n        return newstate;\r\n    default:\r\n        return prestate;\r\n}\r\n}\r\n\r\nexport default addressdata","const validation = (prestate = [\r\n  \r\n], action) => {\r\nvar {\r\n    type,\r\n    payload\r\n} = action;\r\nswitch (type) {\r\n    case \"validation\":\r\n        var newstate = [...payload]\r\n        return newstate;\r\n\r\n    default:\r\n        return prestate;\r\n}\r\n}\r\n\r\nexport default validation","import {createStore,applyMiddleware,combineReducers} from 'redux'\r\nimport reduxPromise from 'redux-promise'\r\nimport reduxThunk from 'redux-thunk'\r\nimport headerisShow from './reducers/headerisShow'\r\nimport headerTitle from './reducers/headerTitle'\r\nimport userinfo from './reducers/userinfo'\r\nimport footerisshow from './reducers/footerisshow'\r\nimport chatinfo from './reducers/chatinfo'\r\nimport messageList from './reducers/messageList'\r\nimport emjlist from './reducers/emjlist'\r\nimport addressdata from './reducers/addressdata'\r\nimport validation from './reducers/validation'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst reducer = combineReducers({\r\n    headerisShow,\r\n    headerTitle,\r\n    userinfo,\r\n    footerisshow,\r\n    chatinfo,\r\n    messageList,\r\n    emjlist,\r\n    addressdata,\r\n    validation\r\n})\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nlet store = createStore(persistedReducer,applyMiddleware(reduxPromise,reduxThunk))\r\n\r\nlet persistor = persistStore(store)\r\n\r\nexport   {\r\n    store,\r\n    persistor\r\n}","import React,{useEffect,useRef} from 'react'\r\nimport {store} from '../../../store/store'\r\nimport './template.css'\r\n\r\nexport default function Template(props) {\r\n    const myboxbgcolor = useRef(null)\r\n    useEffect(()=>{\r\n    // console.log(props,myboxbgcolor)\r\n    myboxbgcolor.current.style.background = props[\"i-bgcolor\"]\r\n    \r\n    })\r\n    return (\r\n        <div onClick={_=>{\r\n            props.onClick()\r\n        }} className=\"template-box\">\r\n            <div ref={myboxbgcolor} className=\"template-box-i\"> \r\n              <i className={`iconfont ${props.iconfont}`}></i>\r\n            </div>\r\n            <span className=\"\">{props.title}\r\n                \r\n            </span>\r\n            {\r\n                store.getState().validation.length ?\r\n                     <span style={{color : \"green\",fontSize:\"12px\"}}>你有新的好友请求</span> \r\n                     :\r\n                      null\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './addresslist.css'\r\nimport Template from '../template/Template'\r\n\r\nclass Addresslist extends Component {\r\n    componentDidMount() {\r\n        this.props.setTitle(\"通讯录\")\r\n        var dom = this.refs[\"address-user-box\"]\r\n        var footerDom = document.getElementById(\"footerDom\")?document.getElementById(\"footerDom\").clientHeight:50\r\n        dom.style.padding = `10px 0px ${footerDom}px 0px `\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div ref=\"address-user-box\" className=\"address-user-box\">\r\n                        <div className=\"address-user-header-box\">\r\n                                <Template title=\"新的朋友\" onClick={()=>{\r\n                                    this.props.history.push('/add/adduser')\r\n                                }} i-bgcolor=\"orange\" iconfont=\"icon-tianjiahaoyou\"></Template>\r\n                        </div>\r\n                        {\r\n                            this.props.addressdata.map(item=>(\r\n                                <li key={item.username} className=\"address-user-item\">\r\n                                    <div className=\"address-user-item-photo\">\r\n                                      <img alt=\"\"  src={`http://127.0.0.1:5001/uploads/header/${item.username}.jpg`}/>\r\n                                    </div>\r\n                                    <div className=\"address-user-item-netname\">{item.netname}</div>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        addressdata : state.addressdata\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTitle : (title)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerTitle\",\r\n                payload : title\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addresslist)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './found.css'\r\n\r\nclass Found extends Component {\r\n    componentDidMount() {\r\n        this.props.setTitle(\"发现\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"found-box\">\r\n                <div onClick={_=>{this.props.history.push('/circle')}} id=\"found-Circle-box\">\r\n                    <i  className=\"iconfont found-icon\">&#xe667;</i>\r\n                    <span className=\"found-span\">朋友圈</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i style={{color:\"#de6016\"}}  className=\"iconfont found-icon\">&#xe661;</i>\r\n                    <span className=\"found-span\">扫一扫</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i style={{color:\"blue\"}}  className=\"iconfont found-icon\">&#xe705;</i>\r\n                    <span className=\"found-span\">公众号</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i style={{color:\"orange\"}}  className=\"iconfont found-icon\">&#xe62d;</i>\r\n                    <span className=\"found-span\">资讯</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i style={{color:\"red\"}}  className=\"iconfont found-icon\">&#xe7b3;</i>\r\n                    <span className=\"found-span\">收藏</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i  style={{color:\"black\"}} className=\"iconfont found-icon\">&#xe60a;</i>\r\n                    <span className=\"found-span\">相册</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n                <div id=\"found-Circle-box\">\r\n                    <i  style={{color:\"#ca5454\"}} className=\"iconfont found-icon\">&#xe635;</i>\r\n                    <span className=\"found-span\">小游戏</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setTitle : (title)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerTitle\",\r\n                payload : title\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Found)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './my.css'\r\n\r\nclass My extends Component {\r\n    componentDidMount() {\r\n        this.props.setHeaderHidden()\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.setHeaderShow()\r\n    }\r\n    logout(){\r\n        localStorage.clear()\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"my-box\">\r\n                {console.log(this.props.userinfo)}\r\n                <div className=\"my\">\r\n                   <dl >\r\n                       <dt className=\"header-photo-box\">\r\n                            <img className=\"header-photo\" src={this.props.userinfo.photopath} alt=\"头像\"/>\r\n                       </dt>\r\n                       <dd>\r\n                            <div className=\"netname\">{this.props.userinfo.netname}</div>\r\n                            <div className=\"username\">微信号：{this.props.userinfo.username}</div>\r\n                       </dd>\r\n                   </dl>\r\n                </div>\r\n                <div onClick={_=>{this.logout()}} id=\"found-Circle-box\">\r\n                    <i  className=\"iconfont found-icon\">&#xe66d;</i>\r\n                    <span className=\"found-span\">注销</span>\r\n                    <i  className=\"iconfont found-jiantou\">&#xe603;</i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        userinfo : state.userinfo\r\n    }\r\n}\r\nconst mapDispathcToProps = {\r\n    setHeaderHidden : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerisShow\",\r\n                payload : false\r\n            })\r\n        }\r\n    },\r\n    setHeaderShow : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerisShow\",\r\n                payload : true\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispathcToProps)(My)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './emojs.css'\r\n\r\n class Emoji extends Component {\r\n    componentDidMount() {\r\n        var dom = document.getElementsByClassName(\"chat-footer\")[0]       \r\n        this.refs.emj.style.bottom = dom.clientHeight + \"px\";\r\n        this.setState({\r\n            emj : this.props.emj\r\n        })\r\n        \r\n    }\r\n    state = {\r\n        emj : []\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"emj-box\" ref=\"emj\">\r\n                {\r\n                    this.state.emj.length !== 0?this.state.emj.map(item=>(\r\n                        <li className=\"emg\" onClick={_=>{\r\n                            this.props.callback(item.text)\r\n                        }} key={item.text}>{item.img}</li>\r\n                    ))\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        emj : state.emjlist\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Emoji)","import {store} from '../store/store'  //这个一个吧文字表情转变成emj表情的方法，通过正则\r\nfunction filterEmj(data){\r\n    var list = store.getState().emjlist;\r\n    var text = data\r\n    list.forEach(item=>{\r\n        var str = '\\\\'+item.text.slice(0,item.text.length-1)+'\\\\'+item.text.slice(-1)\r\n       var reg = new RegExp(str,'g')\r\n       text = text.replace(reg,item.img)\r\n    })\r\n    return text\r\n}\r\n\r\nexport default filterEmj;","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ws from '../model/chat'\r\nimport {List} from  'immutable'\r\nimport './chat.css'\r\nimport Emoji from './emoji/Emoji'\r\nimport filterEmj from '../lib/filterEmj'\r\n\r\nclass Chat extends Component {\r\n    state = {\r\n        text : \"\",\r\n        emjisshow : false,\r\n        index : null\r\n    }\r\n    componentDidMount() {\r\n        this.props.setfootnavhidden()\r\n        this.props.setheaderhidden()\r\n        this.updataUnreadmsg()\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.setfootnavshow()\r\n        this.props.setheadershow()\r\n    }\r\n    updataUnreadmsg = ()=>{   //清除未读消息方法\r\n        // console.log(props.messageList,props.chatuserinfo.toNetName)\r\n        var imblist = List(this.props.messageList)\r\n        this.props.messageList.forEach((item,index) => {\r\n            if(item.netname === this.props.chatuserinfo.toNetName){\r\n                this.setState({\r\n                    index\r\n                })\r\n                imblist.update(index,value => {\r\n                   value.unread = 0\r\n                })\r\n            }\r\n        })\r\n        this.props.updatamessage(imblist.toJS())\r\n    }\r\n   ChatHandler = ()=>{  //点击发送按钮后的函数\r\n        var obj = {\r\n            ...this.props.chatuserinfo,\r\n            msg : this.state.text,\r\n            type : \"chat\",  //表示是往聊天室的数组存入上线信息还是发送聊天内容\r\n        }\r\n        var imblist = List(this.props.messageList)\r\n        this.props.messageList.forEach((item,index)=>{\r\n           if( item.netname === this.props.chatuserinfo.toNetName){\r\n               imblist.update(index,value=>{\r\n                    value.msg.push({\r\n                        msg: this.state.text,\r\n                        type: \"send\",\r\n                        time : new Date().getTime()\r\n                    })\r\n                    this.setState({\r\n                        listData : imblist.toJS()[index].msg\r\n                    })\r\n               })\r\n           }\r\n        })\r\n        this.props.updatamessage(imblist.toJS())\r\n        ws.send(JSON.stringify(obj))\r\n        this.setState({\r\n            text : \"\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"chat\">\r\n                <div className=\"chat-header\">\r\n                    <span onClick={_=>{this.props.history.goBack()}}><i className=\"iconfont\">&#xe65b;</i></span>  \r\n                    <span>{this.props.chatuserinfo.toNetName}</span>\r\n                    <span><i className=\"iconfont\">&#xe748;</i></span>\r\n                </div>    \r\n                <div className=\"chat-box\">\r\n                {  \r\n                    this.state.index === null ? null\r\n                    :\r\n                    this.props.messageList[this.state.index][\"msg\"].map(item => (\r\n                       <div key={item.time} className={item.type===\"get\"?\"chat-box-item-get\" : \"chat-box-item-send\"}>\r\n                           <div className=\"chat-photo-box\">\r\n                               <img alt=\"\" src={`http://127.0.0.1:5001/uploads/header/${item.type===\"get\"?this.props.chatuserinfo.to:this.props.chatuserinfo.from}.jpg`}></img>\r\n                           </div>\r\n                           <div className=\"chat-info-box\">\r\n                               {/* <div className=\"chat-info-name\">{listData.netname}</div> */}\r\n                               <div className=\"chat-info-text\">{filterEmj(item.msg)}</div>\r\n                           </div>\r\n                        </div>\r\n                   ))\r\n                  \r\n                }\r\n                </div>\r\n                {\r\n                    this.state.emjisshow ? \r\n                    <Emoji callback={(emj)=>{\r\n                        this.setState({\r\n                            text : this.state.text+emj\r\n                        })\r\n                        this.setState({\r\n                            emjisshow : false\r\n                        })\r\n                    }}/>\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"chat-footer\">\r\n                        <div className=\"voice\">\r\n                         <i className=\"iconfont\">&#xe618;</i>\r\n                        </div>\r\n                        <div className=\"chat-input\">\r\n                            <input value={this.state.text} onChange={(ev)=>{this.setState({text: ev.target.value})}} type=\"text\"/>\r\n                        </div>\r\n                        <div className=\"chat-more-box\">\r\n                            <i onClick={_=>{this.setState({\r\n                            emjisshow : !this.state.emjisshow\r\n                        })}} className=\"iconfont chat-expression\">&#xe603;</i>\r\n                            <i onClick={ev=>{this.ChatHandler()}} className=\"iconfont chat-more\">&#xe6a7;</i>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store)=>{\r\n    return {\r\n        chatuserinfo : store.chatinfo,\r\n        messageList : store.messageList\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setfootnavhidden : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"footerisshow\",\r\n                payload : false\r\n            })\r\n        }\r\n    },\r\n    setfootnavshow : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"footerisshow\",\r\n                payload : true\r\n            })\r\n        }\r\n    },\r\n    setheaderhidden : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerisShow\",\r\n                payload : false\r\n            })\r\n        }\r\n    },\r\n    setheadershow : ()=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"headerisShow\",\r\n                payload : true\r\n            })\r\n        }\r\n    },\r\n    updatamessage : (data)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"message\",\r\n                payload : data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Chat)","import React, { Component } from 'react'\r\nimport { Popover, NavBar} from 'antd-mobile';\r\nimport {withRouter} from 'react-router-dom'\r\nimport './scan.css'\r\n\r\nconst Item = Popover.Item;\r\n\r\nconst myImg = src => <img src={`https://gw.alipayobjects.com/zos/rmsportal/${src}.svg`} className=\"am-icon am-icon-xs\" alt=\"\" />;\r\n\r\n class Scan extends Component {\r\n    state = {\r\n        visible : false\r\n    };\r\n    onSelect = (opt) => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n        if(opt.key === \"4\"){\r\n            this.addUserHandler()\r\n            \r\n        }else if(opt.key === \"5\"){\r\n            this.scanHandler()\r\n        }\r\n\r\n    };\r\n    handleVisibleChange = (visible) => {\r\n        this.setState({\r\n            visible,\r\n        });\r\n    };\r\n    addUserHandler=()=>{\r\n        // console.log(\"添加好友\")\r\n        this.props.history.push('/add/adduser')\r\n    }\r\n    scanHandler=()=>{\r\n        // console.log(\"扫一扫\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"scan\" >\r\n                <NavBar\r\n                    mode=\"light\"\r\n                    rightContent={\r\n                        <Popover mask={false}\r\n                            overlayClassName=\"fortest\"\r\n                            overlayStyle={{ color: 'currentColor' }}\r\n                            visible={false}\r\n                            overlay={[\r\n                                (<Item key=\"4\"  value=\"add\" icon={<i className=\"iconfont\">&#xe702;</i>} data-seed=\"logId\">添加好友</Item>),\r\n                                (<Item key=\"5\" value=\"special\" icon={myImg('PKAgAqZWJVNwKsAJSmXd')}  style={{ whiteSpace: 'nowrap' }}>扫一扫</Item>),\r\n                                \r\n                            ]}\r\n                            align={{\r\n                                overflow: { adjustY: 0, adjustX: 0 },\r\n                                offset: [-10, 0],\r\n                            }}\r\n                            // onVisibleChange={this.handleVisibleChange}\r\n                            onSelect={this.onSelect}\r\n                        >\r\n                            <div style={{\r\n                                height: '100%',\r\n                                padding: '0 15px',\r\n                                marginRight: '-15px',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            >\r\n                                                <i className=\"iconfont\">&#xe629;</i>\r\n\r\n                            </div>\r\n                        </Popover>\r\n                    }\r\n                >\r\n                </NavBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Scan)","import ws from '../../model/chat'\r\nimport React, { Component } from 'react'\r\nimport { NavLink, Route, Switch, Redirect } from 'react-router-dom'\r\nimport './content.css'\r\nimport Message from './message/Message'\r\nimport Addresslist from './addresslist/Addresslist'\r\nimport Found from './found/Found'\r\nimport My from './my/My'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Chat from '../../components/Chat'\r\nimport Scan from '../../components/scan/Scan'\r\nimport { List } from 'immutable'\r\n\r\nclass Content extends Component {\r\n  switchMessage(type,msg,timeStamp){\r\n    switch (type) {\r\n      case \"chat\":\r\n        // console.log(\"有一条来自\"+msg.from+\"的聊天消息\")\r\n        let list = List(this.props.MessageList)\r\n        this.props.MessageList.forEach((item, index) => {\r\n          if (item.username === msg.from) {  //当后端发送的消息中的from字段和状态中的username重合时，就增加一条话\r\n            //   item.msg.push(msg.msg)\r\n            list.update(index, item => {\r\n              item.unread++\r\n              item.msg.push({\r\n                msg: msg.msg,\r\n                type: \"get\",\r\n                time: timeStamp\r\n              })\r\n            })\r\n          }\r\n        })\r\n       this.props.setMessageList(list.toJS())\r\n        break;\r\n      case \"validation\":\r\n       console.log(\"有一条验证消息\",msg,this)\r\n       var arr = [...this.props.validation]\r\n       arr.push({\r\n         username : msg.username,\r\n         netname : msg.NetName\r\n       })\r\n       this.props.setvalidation(arr)   \r\n       break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  initData(){\r\n    axios.get(`/users/getinitdata?username=${this.props.userinfo.username}`).then(res=>{\r\n      this.props.updateaddressdata(res.data.friends)\r\n      this.props.updatevalidationdata(res.data.validation)\r\n    })\r\n    \r\n  }\r\n  connectionChat = () => {\r\n    var ws = new WebSocket('ws://127.0.0.1:8080');\r\n    ws.onopen = () => {\r\n      console.log(\"连接成功\")\r\n      ws.send(JSON.stringify({\r\n        type: \"connect\",\r\n        userinfo: this.props.userinfo.username\r\n      }))\r\n    }\r\n    ws.onerror = function () {\r\n      console.log(\"服务器连接失败\")\r\n    }\r\n\r\n    ws.onmessage = (message) => {\r\n      console.log(message)\r\n      var msg = JSON.parse(message.data)\r\n      this.switchMessage(msg.type,msg,message.timeStamp)\r\n    }\r\n\r\n  }\r\n  countUnreadCount = () => {\r\n    var count = 0;\r\n    this.props.MessageList.forEach(item => {\r\n      count += item.unread\r\n    })\r\n    return count;\r\n  }\r\n  componentDidMount = () => {\r\n    this.connectionChat()\r\n    this.initData()\r\n    setInterval(() => {   //心跳体验\r\n      ws.send(JSON.stringify({\r\n        type: \"ping\"\r\n      }))\r\n    }, 3000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        {\r\n          this.props.headerisShow ?\r\n            <header id=\"headerDom\">\r\n              <div className=\"header-box\">\r\n                <span style={{ position: \"absolute\", transform: \"translateX(-50%)\" }}>{this.props.headerTitle}</span>\r\n                <Scan />\r\n              </div>\r\n            </header>\r\n            :\r\n            null\r\n        }\r\n        <main id=\"mainDom\">\r\n          <Switch>\r\n            <Route path='/index/message' component={Message} />\r\n            <Route path='/index/Chat/:haha' component={Chat} />\r\n            <Route path='/index/addresslist' component={Addresslist} />\r\n            <Route path='/index/found' component={Found} />\r\n            <Route path='/index/my' component={My} />\r\n            <Redirect from=\"/index\" to=\"/index/message\"></Redirect>\r\n          </Switch>\r\n        </main>\r\n        {\r\n\r\n          this.props.footerisshow ?\r\n            <footer id=\"footerDom\">\r\n              <NavLink activeClassName=\"active\" className=\"footnav\" to=\"/index/message\">\r\n                <i className=\"iconfont\">&#xe622;</i>\r\n                <span>消息</span>\r\n                {\r\n                  this.countUnreadCount() === 0 ?\r\n                    null\r\n                    :\r\n                    <div className=\"unread-count\">{this.countUnreadCount()}</div>\r\n                }\r\n              </NavLink>\r\n              <NavLink className=\"footnav\" to=\"/index/addresslist\">\r\n                <i className=\"iconfont\">&#xe63a;</i>\r\n                <span>通讯录</span>\r\n                {this.props.validation.length?<div className=\"red-dot\"></div>:null}\r\n              </NavLink>\r\n              <NavLink className=\"footnav\" to=\"/index/found\"><i className=\"iconfont\">&#xe621;</i><span>发现</span></NavLink>\r\n              <NavLink className=\"footnav\" to=\"/index/my\"><i className=\"iconfont\">&#xe678;</i><span>我</span></NavLink>\r\n            </footer>\r\n            :\r\n            null\r\n        }\r\n        <div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    headerTitle: state.headerTitle,\r\n    headerisShow: state.headerisShow,\r\n    footerisshow: state.footerisshow,\r\n    userinfo: state.userinfo,\r\n    MessageList: state.messageList,\r\n    validation : state.validation\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setMessageList: (data) => {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: \"message\",\r\n        payload: [\r\n          ...data\r\n        ]\r\n      })\r\n    }\r\n  },\r\n  updateaddressdata : (data)=>{\r\n    return (dispatch)=>{\r\n      dispatch({\r\n        type : \"friendlist\",\r\n        payload : data\r\n      })\r\n    }\r\n  },\r\n  updatevalidationdata : (data)=>{\r\n    return (dispatch)=>{\r\n      dispatch({\r\n        type : \"validation\",\r\n        payload : data\r\n      })\r\n    }\r\n  },\r\n  setvalidation : (data)=>{\r\n    return (dispatch)=>{\r\n        dispatch({\r\n            type : \"validation\",\r\n            payload:data\r\n        })\r\n    }\r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content)","import React, { Component } from 'react'\r\n\r\nexport default class Notfound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                404,没有找到该页面\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{useState} from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { SearchBar,Button,Toast} from 'antd-mobile';\r\nimport {store} from '../../store/store'\r\nimport Axios from 'axios';\r\nimport {connect} from 'react-redux'\r\nimport './adduser.css'\r\n\r\nfunction AddUser(props) {\r\n    const [value,setvalue] = useState(\"\")\r\n    const [datalist,setDataList] = useState([])\r\n    const [isshow,setIsshow] = useState(false)\r\n    var submitFun = ()=>{\r\n            Axios.get(`users/adduser?username=${value}`).then(res=>{\r\n                if(!res.data.err){\r\n                    // setDataList([...datalist].push(res.data.msg))\r\n                    var newDataList = []\r\n                    newDataList.push(res.data.msg)\r\n                    setDataList(newDataList)\r\n                    setIsshow(false)\r\n                }else{\r\n                    setIsshow(true)\r\n                }\r\n            })\r\n            // setvalue(\"\")\r\n    }\r\n    var onChange = (value)=>{\r\n        setvalue(value)\r\n    }\r\n    var addFun = ()=>{\r\n        // console.log(store.getState())\r\n        Axios.post('/users/adduservalidation',{\r\n            username : value,  //验证消息发给谁\r\n            friendname : store.getState().userinfo.username,   //发送者的账号\r\n            netname : store.getState().userinfo.netname  //发送者的网名\r\n        }).then(res=>{\r\n            if(!res.data.err){\r\n                // setDataList([])\r\n                setvalue(\"\")\r\n                Toast.info('发送好友请求成功', 2);\r\n            }\r\n            // console.log(res.data)\r\n        })\r\n    }\r\n    var updatavalidation = (value,index)=>{  //value表示同意还是拒绝，index表示点击的哪个\r\n        if(value){\r\n            Axios.post(`/users/updatafriendsList`,{\r\n                username : props.userinfo.username,\r\n                data : props.validation[index]\r\n            }).then(res=>{\r\n                if(!res.data[\"err\"]){\r\n                    props.setaddressdata([...props.addressdata,props.validation[index]])\r\n                    Axios.post(`/users/updatavalidationlist`,{\r\n                        username : props.userinfo.username,\r\n                        data : props.validation[index]\r\n                    }).then(res=>{\r\n                        if(!res.data[\"err\"]){\r\n                            var arr = [...props.validation]\r\n                            arr.splice(index,1)\r\n                            props.setvalidation(arr)   \r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }else{  //点击拒绝后的分支\r\n            Axios.post(`/users/updatavalidationlist`,{\r\n                username : props.userinfo.username,\r\n                data : props.validation[index]\r\n            }).then(res=>{\r\n                if(!res.data[\"err\"]){\r\n                    var arr = [...props.validation]\r\n                    arr.splice(index,1)\r\n                    props.setvalidation(arr)   \r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <header className=\"adduser-header\">\r\n                <span className=\"Add-goback\" onClick={_ => props.history.goBack()}><i className=\"iconfont\">&#xe65b;</i></span>\r\n                <span>添加好友</span>\r\n            </header>\r\n            <SearchBar\r\n                // value={this.state.value}\r\n                placeholder=\"微信号\"\r\n                cancelText=\"查找\"\r\n                onChange = {onChange}\r\n                onCancel={() => submitFun()}\r\n                onSubmit={value => submitFun()}\r\n                onClear={value => console.log(value, 'onClear')}\r\n                value = {value}\r\n                showCancelButton\r\n            />\r\n            {\r\n                datalist.map(item => (\r\n                    <div className=\"adduser-box\" key={item.username}>\r\n                        <div className=\"adduser-item-header\">\r\n                                <div className=\"adduser-item-photo\">\r\n                                  <img alt=\"\" src={`http://127.0.0.1:5001/uploads/header/${item.username}.jpg`}/>\r\n                                </div>\r\n                                <div className=\"adduer-item-name\">\r\n                                    <span>用户名：{item.netname}</span>\r\n                                    <div className=\"adduser-item-signature\">个性签名：{item.signature}</div>\r\n                                </div>\r\n                                <div onClick={_=>{addFun()}} className=\"adduser-item-addbtn\">\r\n                                    <Button  style={{background:\"green\",color:\"#fff\"}} type=\"primary\" inline size=\"small\" disabled>添加到通讯录</Button>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            {\r\n                isshow ? \r\n                <div className=\"adduser-error\">没有该用户</div>\r\n                :\r\n                null\r\n            }\r\n            {\r\n                props.validation.map((item,index)=>(\r\n                    <div className=\"adduser-box\" key={item.username}>\r\n                        <div className=\"adduser-item-header\">\r\n                                <div className=\"adduser-item-photo\">\r\n                                  <img alt=\"\" src={`http://127.0.0.1:5001/uploads/header/${item.username}.jpg`}/>\r\n                                </div>\r\n                                <div className=\"adduer-item-name\">\r\n                                    <span>微信号：{item.username}</span>\r\n                                    <div className=\"adduser-item-signature\">呢名：{item.netname}</div>\r\n                                </div>\r\n                                <div  className=\"adduser-item-addbtn\">\r\n                                    <Button onClick={()=>{updatavalidation(1,index)}} style={{background:\"green\",color:\"#fff\"}} type=\"primary\" inline size=\"small\" >同意</Button>\r\n                                    <Button onClick={()=>{updatavalidation(0,index)}}  style={{background:\"#d93131\",color:\"#fff\"}} type=\"primary\" inline size=\"small\" >拒绝</Button>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        validation : state.validation,\r\n        addressdata : state.addressdata,\r\n        userinfo : state.userinfo\r\n    }\r\n}\r\nconst mapDispatchToProps={\r\n    setaddressdata : (data)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"friendlist\",\r\n                payload:data\r\n            })\r\n        }\r\n    },\r\n    setvalidation : (data)=>{\r\n        return (dispatch)=>{\r\n            dispatch({\r\n                type : \"validation\",\r\n                payload:data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AddUser))","import React from 'react'\r\nimport './circle.css'\r\n\r\nexport default function Circle(props) {\r\n    return (\r\n        <div>\r\n            <header className=\"circle-box-header\">\r\n                <i onClick={_=>props.history.goBack()} className=\"iconfont\">&#xe65b;</i>\r\n                <span>朋友圈</span>\r\n                <i style={{fontSize:\"20px\"}} className=\"iconfont\">&#xe61a;</i>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { \r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from  'react-router-dom'\r\nimport Home from '../views/home/Home'\r\nimport Login from '../views/login/Login'\r\nimport Register from '../views/register/Register'\r\nimport Content from '../views/content/Content'\r\nimport Notfound from '../views/error/Notfound'\r\nimport AddUser from '../components/adduser/AddUser'\r\nimport Circle from '../components/circle/Circle'\r\n\r\n\r\nexport default class wxRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <Route path=\"/register\" component={Register}></Route>\r\n                    <Route path='/add/adduser' component={AddUser}/>  \r\n                    <Route path='/circle' component={Circle}/>  \r\n                        {/* 添加好友路由 */}\r\n                    <Route path=\"/index\" render={()=>(\r\n                        localStorage.getItem('login') === \"true\"?  //如果登陆过，就显示主页面\r\n                        <Content></Content>\r\n                        :\r\n                        <Home></Home>\r\n                        )} >\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/index\"></Redirect>\r\n                    <Route path=\"/\" component={Notfound}></Route>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport WxRouter from './router/index'\nimport 'antd-mobile/dist/antd-mobile.css';\nimport {Provider} from 'react-redux'\nimport {store,persistor} from './store/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nclass App extends Component{\n \n  \n render(){\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n       <WxRouter></WxRouter>\n     </PersistGate>\n    </Provider>\n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}